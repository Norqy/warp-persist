#summary Persistence support for Google Guice applications

= Introduction =


  * [QuickStart Quick Start]
  * [Introduction]
    * [Overview]
    * [UsageScenarios Usage scenarios]
  * [TransactionManagement Managing transactions with warp-persist]
    * [TransactionIntro What are transactions?]
    * [LocalTxns Resource-Local transactions]
    * [DeclarativeTxns Declarative transaction management]
      * [RollingBackTxns Rolling back on exceptions]
      * [ExceptOnTxns Except on certain exceptions]
    * [CustomMatchers Intercepting methods for transactions]
      * [ClassTxnal Using class-level @Transactional]
      * [AnyTxnal Using your own annotation]
  * [DataTier Data access with warp-persist]
    * [UnitsOfWork Units of work]
      * [TransactionUnitOfWork Transaction: the default unit of work]
      * [OSIVUnitOfWork Open session in view]
        * [SprFilter The Session Filter]
      * [CustomUnitOfWork Arbitrary units of work]
        * [WorkManager The WorkManager interface]
    * [ShuttingDown Shutting down and cleaning up properly]
  * [Hibernate Using Hibernate]
    * [HibernateConfig Configuring Hibernate]
    * [InjectingSessions Working with a Hibernate _Session_]
  * [JPA Using JPA]
    * [JPAConfig Configuring JPA]
    * [InjectingEMs Working with a JPA _EntityManager_]
  * [Db4o Using db4objects]
    * [Db4oConfig Configuring db4o]
    * [InjectingOC Working with a db4o _ObjectContainer_]
  * [DynamicFinders Dynamic Finders: a powerful query abstraction]
    * [DAs Using Dynamic Accessors]
    * [DFs Using domain-driven method interceptors]
    * [ResultAutoBoxing Pagination and result-set autoboxing]